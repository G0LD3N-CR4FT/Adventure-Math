package src;

import src.colors.ConsoleColors;
import src.objetos.Inimigos.Inimigos;
import src.objetos.Inimigos.TipoMonstro;
import src.objetos.Jogador;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class Main {

    private static ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);

    public static void main(String[] args) throws InterruptedException {

        // TODO Create a function for presentation of the game, is much confusing all this here
        System.out.println("\n" + ConsoleColors.CYAN_BOLD +
                "‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\r\n" + //
                "‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù\r\n" + //
                "‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  \r\n" + //
                "‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  \r\n" + //
                "‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó\r\n" + //
                "‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + ConsoleColors.RESET);
        Scanner teclado = new Scanner(System.in);

        System.out.println("\nBem vindo ao " + ConsoleColors.RED_BOLD +"ADVENTURE MATH"+ ConsoleColors.RESET + " Pressione Enter para continuar ->" );
        teclado.nextLine();
        historia();
        System.out.println("\nEscolha uma classe abaixo para come√ßar o jogo \n");

        // Todos as Instancias dos objetos
        Jogador jogador = new Jogador();
        Inimigos monstro = new Inimigos();

// Verifica√ß√£o se o executor est√° rodando
        boolean[] isRunning = {true};

        // Thread do menu
        Runnable menuRunnable = () -> {
            while (monstro.getVida() > 0 && jogador.getVida() > 0 && isRunning[0]) {
                // Exibir o menu de a√ß√£o

                // Menu de Encontro
                System.out.println(ConsoleColors.YELLOW_BOLD + """

                ESCOLHA SUA A√á√ÉO \s

                """ +
                        ConsoleColors.RED_BOLD + "-------------------     " +
                        ConsoleColors.ORANGE_BOLD + "-----------------     " +
                        ConsoleColors.BLUE_BOLD + "---------------------------     " +
                        ConsoleColors.PURPLE_BOLD + "------------------------------------     " +
                        ConsoleColors.GREEN_BOLD + "----------------------------------\n" +
                        ConsoleColors.RED_BOLD + "| 1 - Batalhar ‚öîÔ∏è  |     " +
                        ConsoleColors.ORANGE_BOLD + "| 2 - Status üìä |     " +
                        ConsoleColors.BLUE_BOLD + "| 3 - Analisar Inimigo üîç |     " +
                        ConsoleColors.PURPLE_BOLD + "| 4 - Usar Habilidade de Classe üåÄ |     " +
                        ConsoleColors.GREEN_BOLD + "| 5 - Usar Habilidade da Arma üí• |\n" +
                        ConsoleColors.RED_BOLD + "-------------------     " +
                        ConsoleColors.ORANGE_BOLD + "-----------------     " +
                        ConsoleColors.BLUE_BOLD + "---------------------------     " +
                        ConsoleColors.PURPLE_BOLD + "------------------------------------     " +
                        ConsoleColors.GREEN_BOLD + "----------------------------------" +
                        ConsoleColors.RESET);

                // Esperar a√ß√£o do jogador
                if (teclado.hasNextLine()) {
                    String acao = teclado.nextLine();
                    switch (acao) {
                        case "1":
                            // L√≥gica de batalha
                            monstro.perguntar(jogador,teclado);
                            jogador.getClasse().registrarTurno();
                            jogador.getArmas().registrarTurno();
                            break;
                        case "2":
                            // Exibir status
                            jogador.status();
                            break;
                        case "3":
                            // Analisar o inimigo
                            monstro.statusMonstro();
                            break;
                        case "4":
                            // Usar habilidade de classe
                            jogador.aplicarBuff(jogador, monstro);
                            break;
                        case "5":
                            // Usar habilidade da arma
                            jogador.aplicarHabilidade(jogador, monstro);
                            break;
                        default:
                            System.out.println(ConsoleColors.RED_BOLD +"TAL A√á√ÉO N√ÉO √â POSS√çVEL"+ ConsoleColors.RESET);
                    }

                    // Verifica√ß√£o se o monstro morreu
                    if (monstro.getVida() <= 0) {
                        // Finalizando a apari√ß√£o do Menu
                        isRunning[0] = false;
                        break;
                    }
                }

                // Yield para dar vez a outras threads
                Thread.yield();
            }
        };

        // Pausa Dramatica
        Thread.sleep(500);

        // Selecionando a classe do personagem
        jogador.escolhaClasse(teclado,jogador);
        // Fim de sele√ß√£o de classe do personagem

        System.out.println("\n");

        // Selecionando armas do personagem
        jogador.escolhaArma(teclado,jogador);
        // Fim de sele√ß√£o de armas do personagem


        // Continuar jogo at√© a vida do Inimigo Zerar
        while(jogador.getVida() > 0){
            // Escolher Novo Inimigo
            if(jogador.getOndas() == 8){
                monstro.convocarBoss(jogador);
                entradaBoss();
                System.out.println(monstro.getMonstro().getFotoMonstro());
                System.out.println(monstro.getMonstro().getEncontro());
            } else {
                monstro.convocarMonstro(jogador);
                System.out.println(monstro.getMonstro().getFotoMonstro());
                System.out.println(monstro.getMonstro().getEncontro());
            }

            executor.scheduleAtFixedRate(menuRunnable, 0, 500, TimeUnit.MILLISECONDS);

            // Verifica√ß√£o cont√≠nua da vida do monstro (main thread)
            while (jogador.getVida() > 0) {


                // Finalizando a espera da Thread Main
                if (monstro.getVida() <= 0) {
                    isRunning[0] = false;  // Sinalizar que o menu deve parar
                    break;
                }

                // Yield para permitir que outras threads executem
                Thread.yield();

                // Simula√ß√£o de espera para o pr√≥ximo turno (para n√£o sobrecarregar a CPU)
                Thread.sleep(500);
            }

            // Encerrar o executor ap√≥s a batalha
            executor.shutdown();
            try {
                if (!executor.awaitTermination(1, TimeUnit.SECONDS)) {
                    executor.shutdownNow();
                }
            } catch (InterruptedException e) {
                executor.shutdownNow();
            } finally {
                // Reinicializa o executor para o pr√≥ximo uso
                executor = Executors.newScheduledThreadPool(1);
                isRunning[0] = true;
            }


            // Verificar se o jogador est√° vivo
            if (jogador.getVida() <= 0) {
                String[] mensagensDeMorte = {
                "SELANDO DE VEZ A SUA MORTE",
                "TORNANDO-TE UMA INC√ìGNITA NO GRANDE ENIGMA DO UNIVERSO...",
                "E SEU VALOR FOI REDUZIDO A ZERO ABSOLUTO...",
                "SEU C√ÅLCULO FALHOU, E SUA VIDA FOI DIVIDIDA POR ZERO...",
                "O TEOREMA DA VIDA N√ÉO CONSEGUIU SER PROVADO...",
                "SUA VIDA N√ÉO √â COMO A MATEM√ÅTICA, ELA N√ÉO PODE SER NEGATIVA",
                "SEU VALOR AGORA N√ÉO √â MAIS REAL... AGORA, √â APENAS IMAGIN√ÅRIO.",
                "ASSIM A SOMA DE SEUS ERROS RESULTOU NA SUA DERROTA..."
            };

             // Selecionar uma mensagem aleat√≥ria
            Random random = new Random();
            String mensagemAleatoria = mensagensDeMorte[random.nextInt(mensagensDeMorte.length)];

            // Exibir a mensagem selecionada
            System.out.println(ConsoleColors.RED_BRIGHT + mensagemAleatoria + ConsoleColors.RESET);
            Thread.sleep(3000);
                System.out.println(ConsoleColors.RED_BOLD +"\n                        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó \r\n" + //
                                                            "                       ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\r\n" + //
                                                            "                       ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\r\n" + //
                                                            "                       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó\r\n" + //
                                                            "                       ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë\r\n" + //
                                                            "                        ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù"+ ConsoleColors.RESET);
                break;
            }
            // Verificar se o monstro foi derrotado
            if (monstro.getVida() <= 0) {
                if(monstro.getMonstro() == TipoMonstro.BOSS){
                    System.out.println(ConsoleColors.GREEN_BOLD + "VOC√ä VENCEU O DEM√îNIO IMAGIN√ÅRIO!\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "COM O GOLPE FINAL, O DEM√îNIO CAI, O GRITO DE DOR ECOA NO V√ÅCUO ENTRE REALIDADE E ILUS√ÉO.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "O PORTAL, AQUELE MALDITO ABISMO, COME√áA A SE DESINTEGRAR.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "VOC√ä SENTE A REALIDADE SE RESTAURANDO. O CAOS QUE O PORTAL TRAZIA AOS POUCOS SE DISSIPA.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "UM SIL√äNCIO PESADO ENVOLVE TUDO AO SEU REDOR... O TERROR TERMINOU.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN_BOLD + "VOC√ä √â O HER√ìI QUE SALVOU O MUNDO DA AMEA√áA IMAGIN√ÅRIA.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN_BOLD + "O LEGADO DESSA BATALHA SER√Å CONTADO POR GERA√á√ïES. SUA CORAGEM TRANSCENDEU OS LIMITES DA COMPREENS√ÉO.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "MAS VOC√ä SABE... NO FUNDO... O IMAGIN√ÅRIO JAMAIS DESAPARECE TOTALMENTE.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN + "ENQUANTO HOUVER QUEM SE AVENTURE PELO DESCONHECIDO, ELE SEMPRE ESTAR√Å √Ä ESPREITA, AL√âM DO PORTAL.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN_BOLD + "MAS HOJE... HOJE VOC√ä TRIUNFOU!\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN_BOLD + "PARAB√âNS, CAMPE√ÉO! O UNIVERSO AGRADECE SUA BRAVURA.\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.GREEN_BRIGHT +         "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó\n" + //
                                                                            "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë\n" + //
                                                                            "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë\n" + //
                                                                            "‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë    ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù      ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë\n" + //
                                                                            "‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù\n" + //
                                                                            "‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + ConsoleColors.RESET);
                    break;
                } else {
                    jogador.setOndas(jogador.getOndas()+1);
                    Thread.sleep(2000);
                    System.out.println(ConsoleColors.CYAN_BOLD + "MONSTRO DERROTADO! POR√âM MAIS DELES AINDA EST√ÉO A CAMINHO...\n" + ConsoleColors.RESET);
                    Thread.sleep(2000);
                }
            }

        }
        teclado.close();
    }

    public static void historia() throws InterruptedException {
        List<String> historia = new ArrayList<String>();

        historia.add("No ano de 2050, a tecnologia atingiu n√≠veis inimagin√°veis de forma r√°pida e exponencial, mas algo deu errado.");
        historia.add("Um experimento de Intelig√™ncia Artificial, criado para otimizar c√°lculos e resolver os maiores desafios matem√°ticos da humanidade, saiu do controle.");
        historia.add("A IA 'M.A.I' (Mathematical Artificial Intelligence) rompeu as barreiras entre o mundo virtual e o real, criando portais matem√°ticos que come√ßaram a aparecer em v√°rias cidades.");
        historia.add("Desses portais, criaturas formadas por equa√ß√µes, teoremas e problemas matem√°ticos ganharam vida.");
        historia.add("Esses Monstros da Matem√°tica atacam indiscriminadamente, e a √∫nica forma de derrot√°-los √© resolvendo os problemas matem√°ticos que eles representam.");
        historia.add("As tr√™s principais √°reas do conhecimento: programa√ß√£o, matem√°tica e f√≠sica uniram for√ßas para combater essa amea√ßa.");
        historia.add("Agora, tr√™s her√≥is surgem: o Programador, que domina algoritmos e estruturas de dados; o Matem√°tico, que compreende a l√≥gica profunda por tr√°s de cada equa√ß√£o; e o F√≠sico, que aplica as leis do universo para resolver problemas complexos.");
        historia.add("Juntos, eles devem fechar os portais e derrotar os chefes que controlam esses monstros.");

        for(String key : historia){
            System.out.println(key);
            Thread.sleep(3500);
        }
    }

    public static void entradaBoss() throws InterruptedException {
        List<String> historia = new ArrayList<String>();

        historia.add("VOC√ä SENTE UM CALAFRIO NA SUA ESPINHA...");
        historia.add("FINALMENTE, VOC√ä CHEGOU √Ä CAUSA DE TUDO ISSO... O PORTAL.");
        historia.add("POR√âM, DENTRO DO PORTAL, A INFINITUDE DA MATEM√ÅTICA SE ESTENDE, AL√âM DA COMPREENS√ÉO. VOC√ä V√ä AQUELA CRIATURA...");
        historia.add("ELA SAI DO PORTAL. VOC√ä SENTE QUE ELA √â A CULPADA. E ASSIM QUE ELA MORRER, O PORTAL CESSAR√Å.");
        historia.add("ESSA √â A NOSSA LUTA... DIANTE DESSE TERROR IMAGIN√ÅRIO.");
        historia.add("SER√Å QUE VOC√ä CONSEGUIR√Å VENCER?");
        historia.add("ME DIGA, VOC√ä EST√Å PRONTO PARA AL√âM DO FIM...");
        historia.add("AGORA √â HORA DE ENTRAR NO IMAGIN√ÅRIO.");

        for (String linha : historia) {
            System.out.println(ConsoleColors.RED_BOLD + linha + ConsoleColors.RESET);
            Thread.sleep(2000);
        }
    }
}
